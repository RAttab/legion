{@LISP/LOAD}

{=SYNOPSIS}

{n} ({*load} {_mod})


{=DESCRIPTION}

Loads and executes the specified {_mod}. Typically used to facilitate
the encapsulation of processing logic within mods by allowing
execution to switch from one related set of operations to another.

{_mod} must refer to an existing mod and can be specified using the
following syntax:

{`
;; Loads the latest version of my-mod
(load my-mod)

;; Loads version 2 of my-mod
(load my-mod.2)
}

While {_mod} must be registered for the function to compile, it is not
required for the mod version to exist at compilation time. Specifying
mod versions that doesn't exist is required to resolve circular
dependencies between mods.

Upon execution, {*load} will reset the state of the processor
(i.e. clear all the registers as well as empty the stack) before
attempting to switch the execution over to {_mod}. If the version of
{_mod} does not exist then {*FAULT_CODE} will be raised and execution
will halt.


{=RETURN}

{*load} never returns.


{=FAULTS}

{*FAULT_CODE} is raised if {_mod} does not exist.


{=ASSEMBLY}

{`
(asm
  (LOAD <mod>))
}


{=EXAMPLE}

{`
(load my-other-mod)

;; Any statement after the load statement will not be executed.
}


{=RELATED}
