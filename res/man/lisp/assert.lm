{@LISP/ASSERT}

{=SYNOPSIS}

{n} ({*assert} {_predicate})


{=DESCRIPTION}

Utility function used to help find bugs in a mod by halting execution
in the event of unexpected assumption. Typically used to assert a
given assumption that the programmer has about the current state.

If {_predicate} evaluates to false (i.e. is equal to zero), {*assert}
will raise the {*USER_FAULT} flag and halt execution. If it instead
evaluates to true (i.e. is not equal to zero) then the function
returns the value 0 and the mod continues to execute normally.


{=RETURN}

{*assert} always returns the value 0 if {_predicate} evaluates to
true. It never returns if {_predicate} evaluates to false.


{=FAULTS}

{*USER_FAULT} is raised if {_predicate} evaluates to false.


{=EXAMPLE}

{`
;; Ensures that (id !item-brain 1) exists
(assert (= (io !io-ping (id !item-brain 1)) !io-ok))
}


{=ASSEMBLY}

{`
(asm
  <predicate>
  (JNZ @false)
  (FAULT)
  (@ false)
  (PUSH 0))
}


{=RELATED}
