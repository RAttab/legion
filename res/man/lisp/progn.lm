{@LISP/PROGN}

{=SYNOPSIS}

{n} ({*progn} {_statement[i]})


{=DESCRIPTION}

Executes one or more {_statement} in sequence returning the value of
the last statement executed. Typically used to create a logical
grouping of statements or to include multiple statements as a function
argument that only allows for a single statement.


{=RETURN}

{*progn} returns the value of the last statement executed.


{=EXAMPLE}

{`
(if is-good
  (progn ;; True-clause which only allows for a single statement
    (io !io-log (self) ?my-test ?all-good)
    (io !io-set (id !item-memory 1) 0 ?all-good))
  (io !io-log (self) ?my-test ?uh-oh))
}


{=ASSEMBLY}

{`
(asm
  <statement[0]>
  (POP)
  <statement[1]>
  (POP)
  <...>
  <statement[n]>)
}


{=RELATED}
